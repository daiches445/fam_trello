[{"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\index.js":"1","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\App.js":"2","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\reportWebVitals.js":"3","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\Login_Page.jsx":"4","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\CCBoard.jsx":"5","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\FCRegister.jsx":"6","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\FCAddNote.jsx":"7","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\AlertDialog.jsx":"8","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\AddNoteDialog.jsx":"9","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\DescriptionAlert.jsx":"10","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\TitleAlert.jsx":"11","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\DatesAlert.jsx":"12"},{"size":559,"mtime":1612194458699,"results":"13","hashOfConfig":"14"},{"size":2738,"mtime":1613076582412,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1612194458699,"results":"16","hashOfConfig":"14"},{"size":4671,"mtime":1613076582485,"results":"17","hashOfConfig":"14"},{"size":9662,"mtime":1613144848513,"results":"18","hashOfConfig":"14"},{"size":10312,"mtime":1613129182007,"results":"19","hashOfConfig":"14"},{"size":5644,"mtime":1612898309510,"results":"20","hashOfConfig":"14"},{"size":1792,"mtime":1612901855104,"results":"21","hashOfConfig":"14"},{"size":5461,"mtime":1613151458997,"results":"22","hashOfConfig":"14"},{"size":2079,"mtime":1613152098590,"results":"23","hashOfConfig":"14"},{"size":2044,"mtime":1613147290617,"results":"24","hashOfConfig":"14"},{"size":2277,"mtime":1613148585828,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ll2cbd",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\index.js",[],["53","54"],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\App.js",["55","56"],"import './App.css';\r\nimport Login_Page from './components/Login_Page';\r\nimport Register from './components/FCRegister'\r\nimport Board from './components/CCBoard';\r\nimport { Switch, Route, withRouter } from 'react-router-dom'\r\nimport { Component } from 'react';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data:'',\r\n      users: [\r\n        { username: 'guy1', password: '1234', fam_id: 'COHEN121' },\r\n        { username: 'guy2', password: '1234', fam_id: 'COHEN121' }\r\n      ],\r\n      family: [{\r\n        ID: 'COHEN121',\r\n        name: 'cohen',\r\n\r\n        notes: [\r\n          { title: 'hello', text: 'asdad'},\r\n          { title: 'hello2', text: 'asdad2'},\r\n          { title: 'hello3', text: 'asdad3'},\r\n          { title: 'hello4', text: 'asdad4'}\r\n        ]\r\n      }\r\n      ]\r\n    }\r\n  }\r\n  catchNoteToAdd = (note) => {\r\n    let families = this.state.family\r\n    let family = families[0]\r\n    family.notes.push(note)\r\n    families[0] = family\r\n    console.log(family);\r\n    this.setState({family:families})\r\n\r\n  }\r\n  catchUserToRegister = (user) => {\r\n    let usersArray = this.state.users\r\n    usersArray.push({ username: user.user_name, password: user.password, fam_id: user.family_ID })\r\n    this.setState({ users: usersArray })\r\n  }\r\n\r\n  AddFamily = (fam)=>{\r\n    let famArr = this.state.family;\r\n    famArr.push({ID:fam.ID,name:fam.name,notes:[{title:'Welcome to FamTrello',text:'take out the trash!'}]})\r\n    this.setState({family:famArr})\r\n  }\r\n catchNoteToDelete=(note)=>{\r\n  let families = this.state.family\r\n  let family = families[0]\r\n  family.notes = family.notes.filter(singleNote=>singleNote.title != note.title)\r\n  families[0] = family\r\n  console.log(family);\r\n  this.setState({family:families})\r\n  }\r\n\r\n  SetCurrentUser=(user)=>{\r\n    let data = {user:user,family:this.state.family.find( f => f.ID === user.fam_id)}\r\n    console.log(data);\r\n    this.setState({data:data})\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render(){\r\n  return (\r\n    <div style={{width:'100%',height:'100%'}}>\r\n      <header>\r\n         <h1>FamTrello</h1>\r\n      </header>\r\n        <div className=\"app_container\">\r\n      <Switch>\r\n        <Route exact path=\"/\"  render={()=><Login_Page data = {this.state}  SetCurrentUser={this.SetCurrentUser}></Login_Page>}></Route>\r\n        <Route path = \"/FCRegister\" render={()=><Register AddFamily={this.AddFamily} sendUserToRegister={this.catchUserToRegister} app_data = {this.state}></Register>}></Route>\r\n        <Route path = '/CCBoard'  render={()=><Board deleteTask = {this.catchNoteToDelete} sendNote = {this.catchNoteToAdd} data = {this.state.data} ></Board>}></Route>\r\n      </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\reportWebVitals.js",[],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\Login_Page.jsx",[],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\CCBoard.jsx",["57","58","59","60","61","62"],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\FCRegister.jsx",["63","64","65"],"import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport '../App.css'\r\nimport { Divider, Grid, Paper } from '@material-ui/core';\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user_name: \"\",\r\n            password: \"\",\r\n            re_pass: \"\",\r\n            name: '',\r\n            family_ID: \"\",\r\n            family_name: \"\",\r\n\r\n            fam_det_dsp: \"flex\",\r\n            fam_crt_dsp: 'none',\r\n            create_family: false,\r\n\r\n            error_username: '',\r\n            error_pass: '',\r\n            error_repass: '',\r\n            error_name: '',\r\n            error_family_name:'',\r\n            error_fam_ID: '',\r\n            form_disabled:true\r\n        }\r\n    }\r\n\r\n    GotFamiliy = (e) => {\r\n        if (this.state.create_family)\r\n            this.setState({ create_family: false, fam_crt_dsp: 'none', fam_det_dsp: \"flex\", error_fam_ID:''})\r\n        else\r\n            this.setState({ create_family: true, fam_crt_dsp: 'flex', fam_det_dsp: \"none\", error_fam_ID:''})\r\n    }\r\n\r\n    SetVAl = (e) => {\r\n        let val = e.target.value;\r\n        let name = e.target.name;\r\n        switch (name) {\r\n            case 'username':\r\n                this.setState({ user_name: val ,error_username:''})\r\n                break;\r\n            case 'password':\r\n                if (val.length < 4) {\r\n                    this.setState({ error_pass: 'password to short' })\r\n                }\r\n                else\r\n                    this.setState({ password: val, error_pass: '' })\r\n                break;\r\n            case 're_pass':\r\n                this.setState({ re_pass: val })\r\n                break;\r\n            case 'name':\r\n                this.setState({ name: val })\r\n                break;\r\n            case 'family_name':\r\n                this.setState({ family_name: val })\r\n                break;\r\n            case 'family_ID':\r\n                this.setState({ family_ID: val ,error_fam_ID:''})\r\n                break;\r\n\r\n\r\n        }\r\n        this.EnableForm()\r\n    }\r\n\r\n    EnableForm = ()=>{\r\n        let fields_arr = [this.state.family_ID,this.state.family_name,this.state.name,this.state.password,this.state.re_pass,this.state.user_name]\r\n        if(fields_arr.findIndex((e) => e === '' ) !== -1)\r\n            return;\r\n        this.setState({form_disabled:false})\r\n    }\r\n\r\n    Register = () => {\r\n\r\n        debugger\r\n        if(this.state.user_name.length < 2){\r\n            this.setState({error_username:'invalid user'})\r\n            return\r\n        }\r\n\r\n        if (this.state.password.length < 4){\r\n            this.setState({error_pass:'must enter a pass'})\r\n            return\r\n        }\r\n            \r\n\r\n        if (this.state.password !== this.state.re_pass) {\r\n            this.setState({ error_repass: 'passwords dont match' })\r\n            return\r\n        }\r\n        else\r\n            this.setState({ error_repass: '' })\r\n\r\n        if (this.state.family_name === '') {\r\n            this.setState({ error_family_name: 'must enter a name' })\r\n            return\r\n        }\r\n        else\r\n            this.setState({ error_family_name: '' })\r\n\r\n\r\n\r\n        let currentFamily = this.props.app_data.family.find(fam => fam.ID === this.state.family_ID)\r\n        let currentUser = this.props.app_data.users.find(user => user.username === this.state.user_name)\r\n\r\n        if(currentUser === undefined){\r\n            let user = {user_name: this.state.user_name, password: this.state.password, fam_id: this.state.family_ID }\r\n            if(this.state.create_family){\r\n                if(currentFamily === undefined){\r\n                    let fam = {ID:this.state.family_ID, name:this.state.family_name}\r\n                    this.props.AddFamily(fam)\r\n                    this.props.sendUserToRegister(user)\r\n                    alert('Hi,'+this.state.name+' Welcome to the family.' )\r\n                    this.props.history.push('/')\r\n                }\r\n                else{\r\n                    this.setState({error_fam_ID:'Taken!'})\r\n                    return\r\n                }\r\n            }\r\n            else{\r\n                if(currentFamily === undefined){\r\n                    this.setState({error_fam_ID:'start a new family or insert valid ID'})\r\n                    return\r\n                }\r\n                else{\r\n                    alert('Hi,'+this.state.name+' Welcome to the family.' )\r\n                    this.props.sendUserToRegister(user)\r\n                    this.props.history.push('/')\r\n\r\n                }\r\n            }\r\n            \r\n        }\r\n        else\r\n            this.setState({error_username:'invalid user name'})\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <Paper elevation='6' style={{width:'30%'}}>\r\n                    <Grid container  direction='column' spacing='3' alignItems='center'>\r\n                        <Grid item >\r\n                            <h2 style={{fontSize:'4ch'}}>Register</h2></Grid>\r\n                        <Grid item xs='12'>\r\n                            <TextField required  helperText={this.state.error_username} error={this.state.error_username} name=\"username\" id=\"filled-basic\" label=\"User Name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                        </Grid>\r\n                      \r\n                        <Divider></Divider>\r\n                        <Grid item spacing='1'>\r\n                            <Grid container spacing='1'>\r\n                                <Grid item xs='6'>\r\n                                    <TextField helperText={this.state.error_pass} error={this.state.error_pass} name=\"password\" id=\"outlined-basic\" type='Password' label=\"password\" variant=\"outlined\" onChange={this.SetVAl} /></Grid>\r\n                                <Grid item xs='6'>\r\n                                    <TextField helperText={this.state.error_repass} error={this.state.error_repass} name=\"re_pass\" id=\"outlined-basic\" type='Password' label=\"ReEnter Password\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container spacing='1'>\r\n                                <Grid item xs='6'>\r\n                                    <TextField error={this.state.e} name=\"name\" id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                                <Grid item xs='6'>\r\n                                    <TextField name=\"family_name\" id=\"outlined-basic\" label=\"Family name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs = '12'>\r\n                            <Grid container direction='row' alignItems='center' >\r\n                                <Grid item style={{ padding: '10px' }}>\r\n                                    <h2 htmlFor=\"\">Create A family?</h2>\r\n                                </Grid>\r\n                                <Grid item xs = '2'>\r\n                                    <Switch\r\n                                        checked={this.state.got_fam}\r\n                                        onChange={this.GotFamiliy}\r\n                                        name=\"checkedA\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs='12' style={{ display: this.state.fam_det_dsp, flexDirection: 'column' }}>\r\n                            <Grid container direction='column' alignItems='center' spacing ='2'>\r\n                                <Grid item >\r\n                                    <label htmlFor=\"\">Enter Your family ID</label>\r\n                                </Grid>\r\n                                <Grid item >\r\n                                    <TextField error={this.state.error_fam_ID} helperText={this.state.error_fam_ID} name=\"family_ID\"  id=\"outlined-basic\" label=\"Family ID\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid item  style={{ display: this.state.fam_crt_dsp }}>\r\n                            <Grid container direction = 'row' alignContent='center' justify=\"center\" spacing ='2'>\r\n                                <Grid item align='center' justify='center' xs='12'>\r\n                                    <label htmlFor=\"\">Add Your Family</label>\r\n                                </Grid>\r\n                                <Grid item >\r\n                                    <TextField  error={this.state.error_fam_ID} name=\"family_ID\" id=\"outlined-basic\" label=\"Family ID\" variant=\"outlined\" helperText={this.state.error_fam_ID === ''?'Suggested :' +' \\' ' + this.state.family_name +'\\'+' + ' some number.':this.state.error_fam_ID} onChange={this.SetVAl}/>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField noWarp defaultValue={this.state.family_name} Value={this.state.family_name} name=\"famCreate_fam_name\" id=\"outlined-basic\"  label=\"Family name\" variant=\"outlined\" onChange={this.SetVAl}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n                        <Grid item>\r\n                            <Button disabled = {this.state.form_disabled} onClick={this.Register} color='primary' style={{ marginBottom: '3vh' }}>Register</Button>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n\r\n                    </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default withRouter(Register)\r\n","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\FCAddNote.jsx",[],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\AlertDialog.jsx",[],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\AddNoteDialog.jsx",[],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\DescriptionAlert.jsx",[],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\TitleAlert.jsx",[],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\DatesAlert.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":54,"column":67,"nodeType":"72","messageId":"73","endLine":54,"endColumn":69},{"ruleId":"74","severity":1,"message":"75","line":78,"column":44,"nodeType":"76","endLine":78,"endColumn":114},{"ruleId":"77","severity":1,"message":"78","line":1,"column":44,"nodeType":"79","messageId":"80","endLine":1,"endColumn":50},{"ruleId":"77","severity":1,"message":"81","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":19},{"ruleId":"77","severity":1,"message":"82","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":17},{"ruleId":"77","severity":1,"message":"83","line":9,"column":8,"nodeType":"79","messageId":"80","endLine":9,"endColumn":24},{"ruleId":"77","severity":1,"message":"84","line":34,"column":13,"nodeType":"79","messageId":"80","endLine":34,"endColumn":24},{"ruleId":"85","severity":1,"message":"86","line":202,"column":1,"nodeType":"87","messageId":"88","endLine":205,"endColumn":159},{"ruleId":"89","severity":1,"message":"90","line":45,"column":9,"nodeType":"91","messageId":"92","endLine":70,"endColumn":10},{"ruleId":"93","severity":1,"message":"94","line":215,"column":212,"nodeType":"72","messageId":"95","endLine":215,"endColumn":213},{"ruleId":"93","severity":1,"message":"94","line":215,"column":252,"nodeType":"72","messageId":"95","endLine":215,"endColumn":253},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Login_Page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'PostAddIcon' is defined but never used.","'FCAddNote' is defined but never used.","'AlertDialogSlide' is defined but never used.","'ITEM_HEIGHT' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]