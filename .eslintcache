[{"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\index.js":"1","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\reportWebVitals.js":"2","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\App.js":"3","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\Login_Page.jsx":"4","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCRegister.jsx":"5","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\CCBoard.jsx":"6","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCAddNote.jsx":"7","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\AddNoteDialog.jsx":"8","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\AlertDialog.jsx":"9","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\EditAlertDialog.jsx":"10","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DescriptionAlert.jsx":"11","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\TitleAlert.jsx":"12","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DatesAlert.jsx":"13"},{"size":559,"mtime":1611303172763,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1610964015155,"results":"16","hashOfConfig":"15"},{"size":4346,"mtime":1613295887816,"results":"17","hashOfConfig":"15"},{"size":4671,"mtime":1613043668451,"results":"18","hashOfConfig":"15"},{"size":10396,"mtime":1613295832714,"results":"19","hashOfConfig":"15"},{"size":11683,"mtime":1613296990797,"results":"20","hashOfConfig":"15"},{"size":5644,"mtime":1613229710322,"results":"21","hashOfConfig":"15"},{"size":5922,"mtime":1613294981270,"results":"22","hashOfConfig":"15"},{"size":2060,"mtime":1613286320542,"results":"23","hashOfConfig":"15"},{"size":6861,"mtime":1613286320630,"results":"24","hashOfConfig":"15"},{"size":2163,"mtime":1613286320609,"results":"25","hashOfConfig":"15"},{"size":2095,"mtime":1613286320648,"results":"26","hashOfConfig":"15"},{"size":2298,"mtime":1613286320588,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1am1rpq",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\index.js",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\reportWebVitals.js",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\App.js",["57","58"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\Login_Page.jsx",[],["59","60"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCRegister.jsx",["61","62","63"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\CCBoard.jsx",["64","65","66","67","68","69","70"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCAddNote.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\AddNoteDialog.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\AlertDialog.jsx",["71","72","73"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nexport default function AlertDialogSlide(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const name = React.useState(props.name)\r\n \r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.handleClose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {name}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{props.info.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n          {props.info.start_date!=\"\" ? props.info.start_date:\"\"} -     {props.info.end_date!=\"\" ? props.info.start_date:\"\"}<br/>\r\n            {props.info.text}<br/>\r\n            {props.info.tagged_users === undefined ? \"\" : props.info.tagged_users.map((user,index)=>index != 0 ? \", \" + user:user)}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\EditAlertDialog.jsx",["74"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport DescriptionAlert from './DescriptionAlert'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TitleAlert from './TitleAlert'\r\nimport DatesAlert from './DatesAlert'\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function  FullScreenDialog(props)   {\r\n    const classes = useStyles();\r\n    const [openFull, setOpenFull] = React.useState(false);\r\n    const [openUsers, setOpenUsers] = React.useState(false);\r\n    const [noteTitle, setTitle] = React.useState(\"\");\r\n    const [noteStartDate, setStart] = React.useState(\"\");\r\n    const [noteEndDate, setEnd] = React.useState(\"\");\r\n    const [usersTagged, setUserTag] = React.useState([]);\r\n    const [noteDescription, setDesc] = React.useState(\"\");\r\n    const [noteId, setId] = React.useState();\r\n    const handleClickOpen = () => {\r\n        setOpenFull(true);\r\n    };\r\n\r\n    const handleClose = async (e) => {\r\n        setOpenFull(false);\r\n        setUserTag([])\r\n        if (e.target.innerText === \"SAVE\") {\r\n            setOpenFull(false)\r\n            setOpenUsers(false)\r\n            setTitle(\"\")\r\n            setStart(\"\")\r\n            setEnd(\"\")\r\n            setUserTag([])\r\n            setDesc(\"\")\r\n             setId(props.note.id)\r\n             console.log(noteId)\r\n                let note = {id:noteId, title: noteTitle, start_date: noteStartDate, end_date: noteEndDate, tagged_users: usersTagged, text: noteDescription }\r\n            console.log(note)\r\n              props.getNoteToEdit1(note)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Tooltip title=\"Add Task\">\r\n\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                    Edit\r\n                </Button>\r\n            </Tooltip>\r\n            <Dialog fullScreen open={openFull} onClose={handleClose} TransitionComponent={Transition}>\r\n                <AppBar style={{ minHeight: \"0\", marginTop: '-2%', right: '1%' }} className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Edit Note\r\n            </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n                            save\r\n            </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <List style={{ marginTop: '-5%' }}>\r\n                    <ListItem button>\r\n                        <TitleAlert info={props.note.title === \"\" ? noteTitle : props.note.title} sendTitle={(val) => setTitle(val)}></TitleAlert>\r\n\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button>\r\n                        <DatesAlert start={props.note.start_date === \"\" ? noteStartDate : props.note.start_date} end={props.note.end_date === \"\" ? noteEndDate : props.note.end_date} sendDates={(valStart, valEnd) => {\r\n                            setStart(valStart)\r\n                            setEnd(valEnd)\r\n                        }}></DatesAlert>\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <ListItemText onClick={() => { setOpenUsers(!openUsers) }} primary=\"Users Tagged\" secondary={usersTagged.length === 0 ? \"Tag a user on a task!\" : usersTagged.map((user, index) =>\r\n                            index === 0 ? user : \", \" + user\r\n                        )} />\r\n                    </ListItem>\r\n                    {props.note.tagged_users === undefined ? <ListItem button >\r\n                        {openUsers === false ? \"\" :\r\n\r\n                            <FormControlLabel\r\n                                onClick={(e) => { e.target.checked === true ? setUserTag([...usersTagged, e.target.name]) : setUserTag(usersTagged.filter(item => e.target.name !== item)) }}\r\n                                control={<Checkbox name=\"Nir\" />}\r\n                                label=\"Nir1\"\r\n\r\n                            />\r\n\r\n                        }\r\n                        {openUsers === false ? \"\" :\r\n\r\n                            <FormControlLabel\r\n                                onClick={(e) => { e.target.checked === true ? setUserTag([...usersTagged, e.target.name]) : setUserTag(usersTagged.filter(item => e.target.name !== item)) }}\r\n\r\n                                control={<Checkbox name=\"Ely\" />}\r\n                                label=\"Ely1\"\r\n                            />\r\n\r\n                        }\r\n                    </ListItem> :\r\n\r\n                        <ListItem button>\r\n                          \r\n                            {\r\n                                props.note.tagged_users.map(user => <FormControlLabel\r\n                                    onClick={(e) => { e.target.checked === true ? setUserTag([...usersTagged, e.target.name]) : setUserTag(usersTagged.filter(item => e.target.name !== item)) }}\r\n                                    control={<Checkbox name={user} />}\r\n                                    label={user}\r\n                                    \r\n                                />)\r\n\r\n                            }\r\n                        </ListItem>\r\n\r\n\r\n                    }\r\n\r\n                    <ListItem button>\r\n                        <DescriptionAlert   setDescInParent={(description1) => setDesc(description1)} desc={props.note.text === \"\" ? noteDescription : props.note.text} style={{ height: '200px' }} />\r\n                    </ListItem>\r\n                 \r\n                </List>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DescriptionAlert.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\TitleAlert.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DatesAlert.jsx",[],{"ruleId":"75","severity":1,"message":"76","line":68,"column":67,"nodeType":"77","messageId":"78","endLine":68,"endColumn":69},{"ruleId":"79","severity":1,"message":"80","line":115,"column":44,"nodeType":"81","endLine":115,"endColumn":114},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":45,"column":9,"nodeType":"88","messageId":"89","endLine":70,"endColumn":10},{"ruleId":"90","severity":1,"message":"91","line":215,"column":212,"nodeType":"77","messageId":"92","endLine":215,"endColumn":213},{"ruleId":"90","severity":1,"message":"91","line":215,"column":252,"nodeType":"77","messageId":"92","endLine":215,"endColumn":253},{"ruleId":"93","severity":1,"message":"94","line":1,"column":44,"nodeType":"95","messageId":"96","endLine":1,"endColumn":50},{"ruleId":"93","severity":1,"message":"97","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":19},{"ruleId":"93","severity":1,"message":"98","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":17},{"ruleId":"93","severity":1,"message":"99","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":24},{"ruleId":"93","severity":1,"message":"100","line":35,"column":13,"nodeType":"95","messageId":"96","endLine":35,"endColumn":24},{"ruleId":"101","severity":1,"message":"102","line":133,"column":108,"nodeType":"103","endLine":133,"endColumn":134},{"ruleId":"104","severity":1,"message":"105","line":234,"column":1,"nodeType":"106","messageId":"107","endLine":237,"endColumn":159},{"ruleId":"75","severity":1,"message":"76","line":45,"column":33,"nodeType":"77","messageId":"78","endLine":45,"endColumn":35},{"ruleId":"75","severity":1,"message":"76","line":45,"column":92,"nodeType":"77","messageId":"78","endLine":45,"endColumn":94},{"ruleId":"75","severity":1,"message":"76","line":47,"column":107,"nodeType":"77","messageId":"78","endLine":47,"endColumn":109},{"ruleId":"93","severity":1,"message":"97","line":15,"column":8,"nodeType":"95","messageId":"96","endLine":15,"endColumn":19},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Login_Page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-native-reassign",["108"],"no-negated-in-lhs",["109"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'PostAddIcon' is defined but never used.","'FCAddNote' is defined but never used.","'AlertDialogSlide' is defined but never used.","'ITEM_HEIGHT' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]