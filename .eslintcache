[{"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\index.js":"1","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\reportWebVitals.js":"2","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\App.js":"3","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\CCBoard.jsx":"4","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\Login_Page.jsx":"5","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCRegister.jsx":"6","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCAddNote.jsx":"7"},{"size":559,"mtime":1611303172763,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1610964015155,"results":"10","hashOfConfig":"9"},{"size":1583,"mtime":1612370852823,"results":"11","hashOfConfig":"9"},{"size":5774,"mtime":1612370852831,"results":"12","hashOfConfig":"9"},{"size":3667,"mtime":1612377702902,"results":"13","hashOfConfig":"9"},{"size":6988,"mtime":1612465178147,"results":"14","hashOfConfig":"9"},{"size":2082,"mtime":1612370852839,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1am1rpq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\index.js",[],["33","34"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\reportWebVitals.js",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\App.js",["35"],"import './App.css';\r\nimport Login_Page from './components/Login_Page';\r\nimport Register from './components/FCRegister'\r\nimport Board from './components/CCBoard';\r\nimport { Switch,Route, withRouter } from 'react-router-dom'\r\nimport { Component } from 'react';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n       users:[\r\n        {username:'guy1',password:'1234',fam_id:'COHEN121'},\r\n        {username:'guy2',password:'1234',fam_id:'COHEN333'}\r\n       ],\r\n       family:[{\r\n        ID:'COHEN121',\r\n        name:'cohen',\r\n        notes:[{title:'hello',text:'asdad'},\r\n        {title:'hello2',text:'asdad2'},\r\n        {title:'hello3',text:'asdad3'},\r\n        {title:'hello4',text:'asdad4'\r\n      }\r\n      ]\r\n          }\r\n       ]\r\n    }\r\n  }\r\n  \r\n  catchUserToRegister=(user)=>{\r\n    let usersArray = this.state.users\r\n    usersArray.push({username:user.user_name,password:user.password,fam_id:user.family_ID})\r\n    this.setState({users:usersArray})\r\n    console.log(this.state.users)\r\n\r\n  }\r\n  render(){\r\n  return (\r\n    <div className=\"app_container\">\r\n      <h1>FamTrello</h1>\r\n      <Switch>\r\n        <Route exact path=\"/\"  render={()=><Login_Page data = {this.state}  ></Login_Page>}></Route>\r\n        <Route path = \"/FCRegister\" render={()=><Register sendUserToRegister={this.catchUserToRegister} users = {this.state.users}></Register>}></Route>\r\n        <Route path = '/CCBoard'  render={()=><Board family = {this.state.family[0]}></Board>}></Route>\r\n      </Switch>\r\n\r\n    </div>\r\n  )\r\n }\r\n}\r\n\r\nexport default withRouter(App);\r\n","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\CCBoard.jsx",["36","37","38","39","40"],"import { Box, Grid, GridList, GridListTile, GridListTileBar, IconButton, Paper, Divider } from '@material-ui/core';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport React, { Component } from 'react'\r\nimport FCAddNote from './FCAddNote';\r\n\r\n\r\nexport default class Board extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Families: [{ familyName: 'TATCHER', familyTickets: [{ title: 'throw garbage', description: 'throw the garbage kfar hassidim', memberTaged: [] }], familyMembers: [{ memberId: 111, name: 'nir' }, { memberId: 222, name: 'naama' }, { memberId: 333, name: 'amir' }] },\r\n            { familyName: 'DAICHES', familyTickets: [{ title: 'throw garbage', description: 'throw the garbage givat ada', memberTaged: [] }], familyMembers: [{ memberId: 444, name: 'ely' }, { memberId: 555, name: 'ella' }, { memberId: 666, name: 'tal' }] }\r\n            ],\r\n            currentFamily: 'DAICHES',\r\n            currentMember: 'tal1',\r\n            addNoteDisplay:'none'\r\n\r\n\r\n        }\r\n    }\r\n openOrCloseAddNote=()=>{\r\n    this.state.addNoteDisplay === '' ? this.setState({addNoteDisplay:<FCAddNote exitFunc = {this.openOrCloseAddNote}/>}) : this.setState({addNoteDisplay:''}) \r\n }\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n\r\n                <Paper  className='board'>\r\n                    {this.state.addNoteDisplay}\r\n                    <Grid  container direction='column' spacing='' >\r\n                        <Grid container alignItems='center'> {/* top line ,add btn ,welcome user */}\r\n                            <Grid item xs='2'>\r\n                                <IconButton onClick={this.openOrCloseAddNote} >\r\n                                    <PostAddIcon color='primary' style={{ fontSize: '50' }}></PostAddIcon>\r\n                                </IconButton>\r\n                            </Grid>\r\n                            <Grid item xs='9' style={{ alignSelf: 'center' }}> <h1>welcome,{this.state.currentMember}</h1></Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container direction='row' > {/* second line ,tasks */}\r\n                            <Grid item xs=\"2\"><h2>tasks</h2></Grid>\r\n                            <Grid item xs='9'>\r\n\r\n                                <div className='tasks_bar' >\r\n                                    {console.log(this.props)}\r\n                                    {\r\n\r\n                                        this.props.family.notes.map((note, index) =>\r\n\r\n                                            <li className='task'><h3>{note.title}</h3>{note.text}</li>\r\n\r\n                                        )}\r\n                                    {/* <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li> */}\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n\r\n                        <Grid container direction='row'> {/* third line ,tasks */}\r\n                            <Grid item xs=\"2\"><h2>my tasks</h2></Grid>\r\n                            <Grid container direction='row' xs='9'> {/* tasks container*/}\r\n                                {/*map function*/}\r\n                                <div className='tasks_bar' >\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container direction='row'> {/* forth line ,tasks */}\r\n                            <Grid item xs=\"2\"><h2>etc. tasks</h2></Grid>\r\n                            <Grid container direction='row' xs='9'> {/* tasks container*/}\r\n                                {/*map function*/}\r\n                                <div className='tasks_bar' >\r\n                                    <li className='task'>task</li>\r\n                                    <li className='task'>task</li>\r\n\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n{/* <p>Current member: {this.state.currentMember} - {this.state.currentFamily}</p>\r\n<p>Family Tickets: {this.state.currentFamily}</p>\r\n<div>{this.state.Families.find(family=>family.familyName === this.state.currentFamily).familyTickets === undefined ? 'NO FAMILY':\r\nthis.state.Families.find(family=>family.familyName === this.state.currentFamily).familyTickets.map((ticket,index)=><p>{index} - {ticket.title}</p>)}</div> */}","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\Login_Page.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCRegister.jsx",["41","42"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCAddNote.jsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":42,"column":44,"nodeType":"49","endLine":42,"endColumn":78},{"ruleId":"50","severity":1,"message":"51","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":13},{"ruleId":"50","severity":1,"message":"54","line":1,"column":21,"nodeType":"52","messageId":"53","endLine":1,"endColumn":29},{"ruleId":"50","severity":1,"message":"55","line":1,"column":31,"nodeType":"52","messageId":"53","endLine":1,"endColumn":43},{"ruleId":"50","severity":1,"message":"56","line":1,"column":45,"nodeType":"52","messageId":"53","endLine":1,"endColumn":60},{"ruleId":"57","severity":1,"message":"58","line":101,"column":1,"nodeType":"59","messageId":"60","endLine":104,"endColumn":159},{"ruleId":"61","severity":1,"message":"62","line":41,"column":9,"nodeType":"63","messageId":"64","endLine":58,"endColumn":10},{"ruleId":"65","severity":1,"message":"66","line":72,"column":71,"nodeType":"67","messageId":"68","endLine":72,"endColumn":73},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react/jsx-pascal-case","Imported JSX component Login_Page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'GridListTileBar' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]