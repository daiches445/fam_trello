[{"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\index.js":"1","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\App.js":"2","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\reportWebVitals.js":"3","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\CCBoard.jsx":"4","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\Login_Page.jsx":"5","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\FCRegister.jsx":"6","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\FCAddNote.jsx":"7"},{"size":559,"mtime":1612194458699,"results":"8","hashOfConfig":"9"},{"size":1879,"mtime":1612650137108,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1612194458699,"results":"11","hashOfConfig":"9"},{"size":5859,"mtime":1612649380334,"results":"12","hashOfConfig":"9"},{"size":3667,"mtime":1612543181136,"results":"13","hashOfConfig":"9"},{"size":6988,"mtime":1612543181128,"results":"14","hashOfConfig":"9"},{"size":5481,"mtime":1612650616609,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ll2cbd",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\index.js",[],["32","33"],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\App.js",["34"],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\reportWebVitals.js",[],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\CCBoard.jsx",["35","36","37","38","39"],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\Login_Page.jsx",[],"C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\FCRegister.jsx",["40","41"],"import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport '../App.css'\r\nimport { Divider, Grid, Paper } from '@material-ui/core';\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user_name: \"\",\r\n            password: \"\",\r\n            re_pass: \"\",\r\n            f_name: '',\r\n            l_name: '',\r\n            family_ID: \"\",\r\n            family_name: \"\",\r\n            fam_det_dsp: \"flex\",\r\n            fam_crt_dsp: 'none',\r\n            got_fam: false,\r\n            error_username: '',\r\n            error_pass: '',\r\n            error_repass: ''\r\n        }\r\n    }\r\n\r\n    GotFamiliy = (e) => {\r\n        if (this.state.got_fam)\r\n            this.setState({ got_fam: false, fam_crt_dsp: 'none', fam_det_dsp: \"flex\", })\r\n        else\r\n            this.setState({ got_fam: true, fam_crt_dsp: 'flex', fam_det_dsp: \"none\", })\r\n    }\r\n\r\n    SetVAl = (e) => {\r\n        let val = e.target.value;\r\n        let name = e.target.name;\r\n        console.log(e);\r\n        switch (name) {\r\n            case 'username':\r\n                this.setState({ user_name: val })\r\n                break;\r\n            case 'password':\r\n                if (val.length < 4) {\r\n                    this.setState({ error_pass: 'password to short' })\r\n                }\r\n                else\r\n                    this.setState({ password: val, error_pass: '' })\r\n                break;\r\n            case 're_pass':\r\n                this.setState({ re_pass: val })\r\n                break;\r\n            case 'family_ID':\r\n\r\n\r\n        }\r\n    }\r\n\r\n    Register = () => {\r\n        if (this.state.password.length < 4)\r\n            return\r\n\r\n        if (this.state.password !== this.state.re_pass) {\r\n            this.setState({ error_repass: 'passwords dont match' })\r\n            return\r\n        }\r\n        else\r\n            this.setState({ error_repass: '' })\r\n\r\n        let currentUser = this.props.users.find(user => user.username == this.state.user_name)\r\n        if (currentUser === undefined) {\r\n            this.props.sendUserToRegister(this.state)\r\n            this.props.history.push('/')\r\n        }\r\n        else\r\n            this.setState({ error_username: 'invalid user name' })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Paper>\r\n                    <Grid container direction='column' spacing='3' alignItems='flex-start' style={{ marginLeft: '10%' }}>\r\n                        <Grid item >\r\n                            <h1>Register</h1></Grid>\r\n                        <Grid item xs='6' alignItems='center'>\r\n                            <TextField helperText={this.state.error_username} error={this.state.error_username} name=\"username\" id=\"filled-basic\" label=\"User Name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n                        <Grid item spacing='1'>\r\n                            <Grid container spacing='1'>\r\n                                <Grid item xs='6'>\r\n                                    <TextField helperText={this.state.error_pass} error={this.state.error_pass} name=\"password\" id=\"outlined-basic\" label=\"password\" variant=\"outlined\" onChange={this.SetVAl} /></Grid>\r\n                                <Grid item xs='6'>\r\n                                    <TextField helperText={this.state.error_repass} error={this.state.error_repass} name=\"re_pass\" id=\"outlined-basic\" type='Password' label=\"ReEnter Password\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container spacing='1'>\r\n                                <Grid item xs='6'>\r\n                                    <TextField name=\"f_name\" id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                                <Grid item xs='6'>\r\n                                    <TextField name=\"l_name\" id=\"outlined-basic\" label=\"Family name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Grid container  >\r\n                                <Grid item xs='9' style={{ padding: '10px' }}>\r\n                                    <label htmlFor=\"\">Create A family?</label>\r\n                                </Grid>\r\n                                <Grid item xs='3' >\r\n                                    <Switch\r\n\r\n                                        checked={this.state.got_fam}\r\n                                        onChange={this.GotFamiliy}\r\n                                        name=\"checkedA\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item className=\"fam\" style={{ display: this.state.fam_det_dsp, flexDirection: 'column' }}>\r\n                            <label htmlFor=\"\">Enter Your family ID</label>\r\n                            <TextField name=\"family_ID\" id=\"outlined-basic\" label=\"Family ID\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                            <br />\r\n                        </Grid>\r\n                        <Grid item style={{ display: this.state.fam_crt_dsp}}>\r\n                            <Grid container>\r\n                                <label htmlFor=\"\">Create your family</label>\r\n                                <Grid item xs='6' className=\"fam\" style={{ display: this.state.fam_crt_dsp }}>\r\n                                    \r\n                                    <TextField name=\"family_ID\" id=\"outlined-basic\" label=\"Family ID\" variant=\"outlined\" />\r\n                                </Grid>\r\n                                <Grid item xs='6'>\r\n                                    <TextField name=\"family_name\" id=\"outlined-basic\" label=\"Family name\" variant=\"outlined\" />\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n                        <Grid item>\r\n                            <Button onClick={this.Register} color='primary' style={{ marginBottom: '3vh' }}>Register</Button>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n\r\n                    </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default withRouter(Register)\r\n","C:\\Users\\nir\\Documents\\GitHub\\fam_trello1\\src\\components\\FCAddNote.jsx",["42","43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":51,"column":47,"nodeType":"51","endLine":51,"endColumn":79},{"ruleId":"52","severity":1,"message":"53","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":13},{"ruleId":"52","severity":1,"message":"56","line":1,"column":21,"nodeType":"54","messageId":"55","endLine":1,"endColumn":29},{"ruleId":"52","severity":1,"message":"57","line":1,"column":31,"nodeType":"54","messageId":"55","endLine":1,"endColumn":43},{"ruleId":"52","severity":1,"message":"58","line":1,"column":45,"nodeType":"54","messageId":"55","endLine":1,"endColumn":60},{"ruleId":"59","severity":1,"message":"60","line":104,"column":1,"nodeType":"61","messageId":"62","endLine":107,"endColumn":159},{"ruleId":"63","severity":1,"message":"64","line":41,"column":9,"nodeType":"65","messageId":"66","endLine":58,"endColumn":10},{"ruleId":"67","severity":1,"message":"68","line":72,"column":71,"nodeType":"69","messageId":"70","endLine":72,"endColumn":73},{"ruleId":"52","severity":1,"message":"71","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":14},{"ruleId":"52","severity":1,"message":"72","line":7,"column":8,"nodeType":"54","messageId":"55","endLine":7,"endColumn":13},{"ruleId":"52","severity":1,"message":"73","line":8,"column":8,"nodeType":"54","messageId":"55","endLine":8,"endColumn":16},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react/jsx-pascal-case","Imported JSX component Login_Page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'GridListTileBar' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Select' is defined but never used.","'Input' is defined but never used.","'MenuItem' is defined but never used.","no-global-assign","no-unsafe-negation"]