[{"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\index.js":"1","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\reportWebVitals.js":"2","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\App.js":"3","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\CCBoard.jsx":"4","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\Login_Page.jsx":"5","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCRegister.jsx":"6","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCAddNote.jsx":"7","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\AddNoteDialog.jsx":"8","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\AlertDialog.jsx":"9","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\EditAlertDialog.jsx":"10","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DatesAlert.jsx":"11","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DescriptionAlert.jsx":"12","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\TitleAlert.jsx":"13"},{"size":559,"mtime":1611303172763,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1610964015155,"results":"16","hashOfConfig":"15"},{"size":4458,"mtime":1613311998665,"results":"17","hashOfConfig":"15"},{"size":11755,"mtime":1613309685685,"results":"18","hashOfConfig":"15"},{"size":4671,"mtime":1613043668451,"results":"19","hashOfConfig":"15"},{"size":10396,"mtime":1613295832714,"results":"20","hashOfConfig":"15"},{"size":5644,"mtime":1613229710322,"results":"21","hashOfConfig":"15"},{"size":5424,"mtime":1613308540574,"results":"22","hashOfConfig":"15"},{"size":2107,"mtime":1613302115492,"results":"23","hashOfConfig":"15"},{"size":5450,"mtime":1613312265972,"results":"24","hashOfConfig":"15"},{"size":2298,"mtime":1613286320588,"results":"25","hashOfConfig":"15"},{"size":2163,"mtime":1613286320609,"results":"26","hashOfConfig":"15"},{"size":2076,"mtime":1613305453434,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1am1rpq",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\index.js",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\reportWebVitals.js",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\App.js",["57","58"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\CCBoard.jsx",["59","60","61","62","63","64","65"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\Login_Page.jsx",[],["66","67"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCRegister.jsx",["68","69","70"],"import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport '../App.css'\r\nimport { Divider, Grid, Paper } from '@material-ui/core';\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user_name: \"\",\r\n            password: \"\",\r\n            re_pass: \"\",\r\n            name: '',\r\n            family_ID: \"\",\r\n            family_name: \"\",\r\n\r\n            fam_det_dsp: \"flex\",\r\n            fam_crt_dsp: 'none',\r\n            create_family: false,\r\n\r\n            error_username: '',\r\n            error_pass: '',\r\n            error_repass: '',\r\n            error_name: '',\r\n            error_family_name:'',\r\n            error_fam_ID: '',\r\n            form_disabled:true\r\n        }\r\n    }\r\n\r\n    GotFamiliy = (e) => {\r\n        if (this.state.create_family)\r\n            this.setState({ create_family: false, fam_crt_dsp: 'none', fam_det_dsp: \"flex\", error_fam_ID:''})\r\n        else\r\n            this.setState({ create_family: true, fam_crt_dsp: 'flex', fam_det_dsp: \"none\", error_fam_ID:''})\r\n    }\r\n\r\n    SetVAl = (e) => {\r\n        let val = e.target.value;\r\n        let name = e.target.name;\r\n        switch (name) {\r\n            case 'username':\r\n                this.setState({ user_name: val ,error_username:''})\r\n                break;\r\n            case 'password':\r\n                if (val.length < 4) {\r\n                    this.setState({ error_pass: 'password to short' })\r\n                }\r\n                else\r\n                    this.setState({ password: val, error_pass: '' })\r\n                break;\r\n            case 're_pass':\r\n                this.setState({ re_pass: val })\r\n                break;\r\n            case 'name':\r\n                this.setState({ name: val })\r\n                break;\r\n            case 'family_name':\r\n                this.setState({ family_name: val })\r\n                break;\r\n            case 'family_ID':\r\n                this.setState({ family_ID: val ,error_fam_ID:''})\r\n                break;\r\n\r\n\r\n        }\r\n        this.EnableForm()\r\n    }\r\n\r\n    EnableForm = ()=>{\r\n        let fields_arr = [this.state.family_ID,this.state.family_name,this.state.name,this.state.password,this.state.re_pass,this.state.user_name]\r\n        if(fields_arr.findIndex((e) => e === '' ) !== -1)\r\n            return;\r\n        this.setState({form_disabled:false})\r\n    }\r\n\r\n    Register = () => {\r\n\r\n        debugger\r\n        if(this.state.user_name.length < 2){\r\n            this.setState({error_username:'invalid user'})\r\n            return\r\n        }\r\n\r\n        if (this.state.password.length < 4){\r\n            this.setState({error_pass:'must enter a pass'})\r\n            return\r\n        }\r\n            \r\n\r\n        if (this.state.password !== this.state.re_pass) {\r\n            this.setState({ error_repass: 'passwords dont match' })\r\n            return\r\n        }\r\n        else\r\n            this.setState({ error_repass: '' })\r\n\r\n        if (this.state.family_name === '') {\r\n            this.setState({ error_family_name: 'must enter a name' })\r\n            return\r\n        }\r\n        else\r\n            this.setState({ error_family_name: '' })\r\n\r\n\r\n\r\n        let currentFamily = this.props.app_data.family.find(fam => fam.ID === this.state.family_ID)\r\n        let currentUser = this.props.app_data.users.find(user => user.username === this.state.user_name)\r\n\r\n        if(currentUser === undefined){\r\n            let user = {user_name: this.state.user_name,name:this.state.name, password: this.state.password, fam_id: this.state.family_ID }\r\n            if(this.state.create_family){\r\n                if(currentFamily === undefined){\r\n                    let fam = {ID:this.state.family_ID, name:this.state.family_name,members:[{username:this.state.user_name,name:this.state.name}]}\r\n                    this.props.sendUserToRegister(user)\r\n                    this.props.AddFamily(fam)\r\n                    alert('Hi,'+this.state.name+' Welcome to the family.' )\r\n                    this.props.history.push('/')\r\n                }\r\n                else{\r\n                    this.setState({error_fam_ID:'Taken!'})\r\n                    return\r\n                }\r\n            }\r\n            else{\r\n                if(currentFamily === undefined){\r\n                    this.setState({error_fam_ID:'start a new family or insert valid ID'})\r\n                    return\r\n                }\r\n                else{\r\n                    alert('Hi,'+this.state.name+' Welcome to the family.' )\r\n                    this.props.sendUserToRegister(user)\r\n                    this.props.history.push('/')\r\n\r\n                }\r\n            }\r\n            \r\n        }\r\n        else\r\n            this.setState({error_username:'invalid user name'})\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <Paper elevation='6' style={{width:'30%'}}>\r\n                    <Grid container  direction='column' spacing='3' alignItems='center'>\r\n                        <Grid item >\r\n                            <h2 style={{fontSize:'4ch'}}>Register</h2></Grid>\r\n                        <Grid item xs='12'>\r\n                            <TextField required  helperText={this.state.error_username} error={this.state.error_username} name=\"username\" id=\"filled-basic\" label=\"User Name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                        </Grid>\r\n                      \r\n                        <Divider></Divider>\r\n                        <Grid item spacing='1'>\r\n                            <Grid container spacing='1'>\r\n                                <Grid item xs='6'>\r\n                                    <TextField helperText={this.state.error_pass} error={this.state.error_pass} name=\"password\" id=\"outlined-basic\" type='Password' label=\"password\" variant=\"outlined\" onChange={this.SetVAl} /></Grid>\r\n                                <Grid item xs='6'>\r\n                                    <TextField helperText={this.state.error_repass} error={this.state.error_repass} name=\"re_pass\" id=\"outlined-basic\" type='Password' label=\"ReEnter Password\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container spacing='1'>\r\n                                <Grid item xs='6'>\r\n                                    <TextField error={this.state.e} name=\"name\" id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                                <Grid item xs='6'>\r\n                                    <TextField name=\"family_name\" id=\"outlined-basic\" label=\"Family name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs = '12'>\r\n                            <Grid container direction='row' alignItems='center' >\r\n                                <Grid item style={{ padding: '10px' }}>\r\n                                    <h2 htmlFor=\"\">Create A family?</h2>\r\n                                </Grid>\r\n                                <Grid item xs = '2'>\r\n                                    <Switch\r\n                                        checked={this.state.got_fam}\r\n                                        onChange={this.GotFamiliy}\r\n                                        name=\"checkedA\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs='12' style={{ display: this.state.fam_det_dsp, flexDirection: 'column' }}>\r\n                            <Grid container direction='column' alignItems='center' spacing ='2'>\r\n                                <Grid item >\r\n                                    <label htmlFor=\"\">Enter Your family ID</label>\r\n                                </Grid>\r\n                                <Grid item >\r\n                                    <TextField error={this.state.error_fam_ID} helperText={this.state.error_fam_ID} name=\"family_ID\"  id=\"outlined-basic\" label=\"Family ID\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid item  style={{ display: this.state.fam_crt_dsp }}>\r\n                            <Grid container direction = 'row' alignContent='center' justify=\"center\" spacing ='2'>\r\n                                <Grid item align='center' justify='center' xs='12'>\r\n                                    <label htmlFor=\"\">Add Your Family</label>\r\n                                </Grid>\r\n                                <Grid item >\r\n                                    <TextField  error={this.state.error_fam_ID} name=\"family_ID\" id=\"outlined-basic\" label=\"Family ID\" variant=\"outlined\" helperText={this.state.error_fam_ID === ''?'Suggested :' +' \\' ' + this.state.family_name +'\\'+' + ' some number.':this.state.error_fam_ID} onChange={this.SetVAl}/>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField noWarp defaultValue={this.state.family_name} Value={this.state.family_name} name=\"famCreate_fam_name\" id=\"outlined-basic\"  label=\"Family name\" variant=\"outlined\" onChange={this.SetVAl}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n                        <Grid item>\r\n                            <Button disabled = {this.state.form_disabled} onClick={this.Register} color='primary' style={{ marginBottom: '3vh' }}>Register</Button>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n\r\n                    </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default withRouter(Register)\r\n","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCAddNote.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\AddNoteDialog.jsx",["71"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\AlertDialog.jsx",["72","73","74"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nexport default function AlertDialogSlide(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const name = React.useState(props.name)\r\n \r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.handleClose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {name}\r\n      </Button>\r\n      {props.info.title === \"\" ? \"\":\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{props.info.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n          {props.info.start_date!=\"\" ? props.info.start_date:\"\"} -     {props.info.end_date!=\"\" ? props.info.start_date:\"\"}<br/>\r\n            {props.info.text}<br/>\r\n            {props.info.tagged_users === undefined ? \"\" : props.info.tagged_users.map((user,index)=>index != 0 ? \", \" + user:user)}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\EditAlertDialog.jsx",["75","76","77","78","79"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DatesAlert.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DescriptionAlert.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\TitleAlert.jsx",[],{"ruleId":"80","severity":1,"message":"81","line":69,"column":69,"nodeType":"82","messageId":"83","endLine":69,"endColumn":71},{"ruleId":"84","severity":1,"message":"85","line":116,"column":44,"nodeType":"86","endLine":116,"endColumn":114},{"ruleId":"87","severity":1,"message":"88","line":1,"column":44,"nodeType":"89","messageId":"90","endLine":1,"endColumn":50},{"ruleId":"87","severity":1,"message":"91","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"87","severity":1,"message":"92","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":17},{"ruleId":"87","severity":1,"message":"93","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":24},{"ruleId":"87","severity":1,"message":"94","line":35,"column":13,"nodeType":"89","messageId":"90","endLine":35,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":133,"column":108,"nodeType":"97","endLine":133,"endColumn":134},{"ruleId":"98","severity":1,"message":"99","line":234,"column":1,"nodeType":"100","messageId":"101","endLine":237,"endColumn":159},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":45,"column":9,"nodeType":"108","messageId":"109","endLine":70,"endColumn":10},{"ruleId":"110","severity":1,"message":"111","line":215,"column":212,"nodeType":"82","messageId":"112","endLine":215,"endColumn":213},{"ruleId":"110","severity":1,"message":"111","line":215,"column":252,"nodeType":"82","messageId":"112","endLine":215,"endColumn":253},{"ruleId":"87","severity":1,"message":"113","line":21,"column":8,"nodeType":"89","messageId":"90","endLine":21,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":46,"column":33,"nodeType":"82","messageId":"83","endLine":46,"endColumn":35},{"ruleId":"80","severity":1,"message":"81","line":46,"column":92,"nodeType":"82","messageId":"83","endLine":46,"endColumn":94},{"ruleId":"80","severity":1,"message":"81","line":48,"column":107,"nodeType":"82","messageId":"83","endLine":48,"endColumn":109},{"ruleId":"87","severity":1,"message":"91","line":15,"column":8,"nodeType":"89","messageId":"90","endLine":15,"endColumn":19},{"ruleId":"87","severity":1,"message":"114","line":19,"column":8,"nodeType":"89","messageId":"90","endLine":19,"endColumn":15},{"ruleId":"87","severity":1,"message":"113","line":21,"column":8,"nodeType":"89","messageId":"90","endLine":21,"endColumn":18},{"ruleId":"87","severity":1,"message":"115","line":45,"column":20,"nodeType":"89","messageId":"90","endLine":45,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":67,"column":5,"nodeType":"89","endLine":67,"endColumn":14,"suggestions":"118"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Login_Page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'PostAddIcon' is defined but never used.","'FCAddNote' is defined but never used.","'AlertDialogSlide' is defined but never used.","'ITEM_HEIGHT' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'DatesAlert' is defined but never used.","'Tooltip' is defined but never used.","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUserTag'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.note.tagged, usersTagged] as a second argument to the useEffect Hook.",["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Add dependencies array: [props.note.tagged, usersTagged]",{"range":"124","text":"125"},[2560,2560],", [props.note.tagged, usersTagged]"]