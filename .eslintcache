[{"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\index.js":"1","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\reportWebVitals.js":"2","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\App.js":"3","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCRegister.jsx":"4","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\Login_Page.jsx":"5","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\CCBoard.jsx":"6","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\EditAlertDialog.jsx":"7","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\AddNoteDialog.jsx":"8","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\AlertDialog.jsx":"9","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DeleteSnackBar.jsx":"10","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DescriptionAlert.jsx":"11","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\TitleAlert.jsx":"12","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DatesAlert.jsx":"13"},{"size":559,"mtime":1611303172763,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1610964015155,"results":"16","hashOfConfig":"15"},{"size":5352,"mtime":1613374719996,"results":"17","hashOfConfig":"15"},{"size":10377,"mtime":1613374322778,"results":"18","hashOfConfig":"15"},{"size":4671,"mtime":1613043668451,"results":"19","hashOfConfig":"15"},{"size":18554,"mtime":1613374842550,"results":"20","hashOfConfig":"15"},{"size":5379,"mtime":1613343648536,"results":"21","hashOfConfig":"15"},{"size":5397,"mtime":1613373375904,"results":"22","hashOfConfig":"15"},{"size":2383,"mtime":1613373417725,"results":"23","hashOfConfig":"15"},{"size":1289,"mtime":1613373375929,"results":"24","hashOfConfig":"15"},{"size":2163,"mtime":1613317386650,"results":"25","hashOfConfig":"15"},{"size":2076,"mtime":1613317386685,"results":"26","hashOfConfig":"15"},{"size":2298,"mtime":1613317386642,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1am1rpq",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\index.js",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\reportWebVitals.js",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\App.js",["58"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCRegister.jsx",["59","60","61"],"import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport '../App.css'\r\nimport { Divider, Grid, Paper } from '@material-ui/core';\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user_name: \"\",\r\n            password: \"\",\r\n            re_pass: \"\",\r\n            name: '',\r\n            family_ID: \"\",\r\n            family_name: \"\",\r\n\r\n            fam_det_dsp: \"flex\",\r\n            fam_crt_dsp: 'none',\r\n            create_family: false,\r\n\r\n            error_username: '',\r\n            error_pass: '',\r\n            error_repass: '',\r\n            error_name: '',\r\n            error_family_name:'',\r\n            error_fam_ID: '',\r\n            form_disabled:true\r\n        }\r\n    }\r\n\r\n    GotFamiliy = (e) => {\r\n        if (this.state.create_family)\r\n            this.setState({ create_family: false, fam_crt_dsp: 'none', fam_det_dsp: \"flex\", error_fam_ID:''})\r\n        else\r\n            this.setState({ create_family: true, fam_crt_dsp: 'flex', fam_det_dsp: \"none\", error_fam_ID:''})\r\n    }\r\n\r\n    SetVAl = (e) => {\r\n        let val = e.target.value;\r\n        let name = e.target.name;\r\n        switch (name) {\r\n            case 'username':\r\n                this.setState({ user_name: val ,error_username:''})\r\n                break;\r\n            case 'password':\r\n                if (val.length < 4) {\r\n                    this.setState({ error_pass: 'password to short' })\r\n                }\r\n                else\r\n                    this.setState({ password: val, error_pass: '' })\r\n                break;\r\n            case 're_pass':\r\n                this.setState({ re_pass: val })\r\n                break;\r\n            case 'name':\r\n                this.setState({ name: val })\r\n                break;\r\n            case 'family_name':\r\n                this.setState({ family_name: val })\r\n                break;\r\n            case 'family_ID':\r\n                this.setState({ family_ID: val ,error_fam_ID:''})\r\n                break;\r\n\r\n\r\n        }\r\n        this.EnableForm()\r\n    }\r\n\r\n    EnableForm = ()=>{\r\n        let fields_arr = [this.state.family_ID,this.state.family_name,this.state.name,this.state.password,this.state.re_pass,this.state.user_name]\r\n        if(fields_arr.findIndex((e) => e === '' ) !== -1)\r\n            return;\r\n        this.setState({form_disabled:false})\r\n    }\r\n\r\n    Register = () => {\r\n\r\n        if(this.state.user_name.length < 2){\r\n            this.setState({error_username:'invalid user'})\r\n            return\r\n        }\r\n\r\n        if (this.state.password.length < 4){\r\n            this.setState({error_pass:'must enter a pass'})\r\n            return\r\n        }\r\n            \r\n\r\n        if (this.state.password !== this.state.re_pass) {\r\n            this.setState({ error_repass: 'passwords dont match' })\r\n            return\r\n        }\r\n        else\r\n            this.setState({ error_repass: '' })\r\n\r\n        if (this.state.family_name === '') {\r\n            this.setState({ error_family_name: 'must enter a name' })\r\n            return\r\n        }\r\n        else\r\n            this.setState({ error_family_name: '' })\r\n\r\n\r\n\r\n        let currentFamily = this.props.app_data.family.find(fam => fam.ID === this.state.family_ID)\r\n        let currentUser = this.props.app_data.users.find(user => user.username === this.state.user_name)\r\n\r\n        if(currentUser === undefined){\r\n            let user = {username: this.state.user_name,name:this.state.name, password: this.state.password, fam_id: this.state.family_ID }\r\n            if(this.state.create_family){\r\n                if(currentFamily === undefined){\r\n                    let fam = {ID:this.state.family_ID, name:this.state.family_name,members:[{username:this.state.user_name,name:this.state.name}]}\r\n                    this.props.AddFamily(fam)\r\n                    this.props.sendUserToRegister(user)\r\n                    alert('Hi,'+this.state.name+' Welcome to the family.' )\r\n                    this.props.history.push('/')\r\n                }\r\n                else{\r\n                    this.setState({error_fam_ID:'Taken!'})\r\n                    return\r\n                }\r\n            }\r\n            else{\r\n                if(currentFamily === undefined){\r\n                    this.setState({error_fam_ID:'start a new family or insert valid ID'})\r\n                    return\r\n                }\r\n                else{\r\n                    alert('Hi,'+this.state.name+' Welcome to the family.' )\r\n                    this.props.sendUserToRegister(user)\r\n                    this.props.history.push('/')\r\n\r\n\r\n                }\r\n            }\r\n            \r\n        }\r\n        else\r\n            this.setState({error_username:'invalid user name'})\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <Paper elevation='6' style={{width:'30%'}}>\r\n                    <Grid container  direction='column' spacing='3' alignItems='center'>\r\n                        <Grid item >\r\n                            <h2 style={{fontSize:'4ch'}}>Register</h2></Grid>\r\n                        <Grid item xs='12'>\r\n                            <TextField required  helperText={this.state.error_username} error={this.state.error_username} name=\"username\" id=\"filled-basic\" label=\"User Name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                        </Grid>\r\n                      \r\n                        <Divider></Divider>\r\n                        <Grid item spacing='1'>\r\n                            <Grid container spacing='1'>\r\n                                <Grid item xs='6'>\r\n                                    <TextField helperText={this.state.error_pass} error={this.state.error_pass} name=\"password\" id=\"outlined-basic\" type='Password' label=\"password\" variant=\"outlined\" onChange={this.SetVAl} /></Grid>\r\n                                <Grid item xs='6'>\r\n                                    <TextField helperText={this.state.error_repass} error={this.state.error_repass} name=\"re_pass\" id=\"outlined-basic\" type='Password' label=\"ReEnter Password\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container spacing='1'>\r\n                                <Grid item xs='6'>\r\n                                    <TextField error={this.state.e} name=\"name\" id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                                <Grid item xs='6'>\r\n                                    <TextField name=\"family_name\" id=\"outlined-basic\" label=\"Family name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs = '12'>\r\n                            <Grid container direction='row' alignItems='center' >\r\n                                <Grid item style={{ padding: '10px' }}>\r\n                                    <h2 htmlFor=\"\">Create A family?</h2>\r\n                                </Grid>\r\n                                <Grid item xs = '2'>\r\n                                    <Switch\r\n                                        checked={this.state.got_fam}\r\n                                        onChange={this.GotFamiliy}\r\n                                        name=\"checkedA\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs='12' style={{ display: this.state.fam_det_dsp, flexDirection: 'column' }}>\r\n                            <Grid container direction='column' alignItems='center' spacing ='2'>\r\n                                <Grid item >\r\n                                    <label htmlFor=\"\">Enter Your family ID</label>\r\n                                </Grid>\r\n                                <Grid item >\r\n                                    <TextField error={this.state.error_fam_ID} helperText={this.state.error_fam_ID} name=\"family_ID\"  id=\"outlined-basic\" label=\"Family ID\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid item  style={{ display: this.state.fam_crt_dsp }}>\r\n                            <Grid container direction = 'row' alignContent='center' justify=\"center\" spacing ='2'>\r\n                                <Grid item align='center' justify='center' xs='12'>\r\n                                    <label htmlFor=\"\">Add Your Family</label>\r\n                                </Grid>\r\n                                <Grid item >\r\n                                    <TextField  error={this.state.error_fam_ID} name=\"family_ID\" id=\"outlined-basic\" label=\"Family ID\" variant=\"outlined\" helperText={this.state.error_fam_ID === ''?'Suggested :' +' \\' ' + this.state.family_name +'\\'+' + ' some number.':this.state.error_fam_ID} onChange={this.SetVAl}/>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField noWarp defaultValue={this.state.family_name} Value={this.state.family_name} name=\"famCreate_fam_name\" id=\"outlined-basic\"  label=\"Family name\" variant=\"outlined\" onChange={this.SetVAl}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n                        <Grid item>\r\n                            <Button disabled = {this.state.form_disabled} onClick={this.Register} color='primary' style={{ marginBottom: '3vh' }}>Register</Button>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n\r\n                    </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nexport default withRouter(Register)\r\n",["62","63"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\Login_Page.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\CCBoard.jsx",["64","65"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\EditAlertDialog.jsx",["66","67","68","69","70","71"],"import React ,{ useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport DescriptionAlert from './DescriptionAlert'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TitleAlert from './TitleAlert'\r\nimport DatesAlert from './DatesAlert'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function  FullScreenDialog(props)   {\r\n    const classes = useStyles();\r\n    const [openFull, setOpenFull] = React.useState(false);\r\n    const [openUsers, setOpenUsers] = React.useState(false);\r\n    const [noteTitle, setTitle] = React.useState(\"\");\r\n    const [usersTagged, setUserTag] = React.useState([]);\r\n    const [noteDescription, setDesc] = React.useState(\"\");\r\n    const [noteId, setId] = React.useState();\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenFull(true);\r\n    };\r\n\r\n    const handleClose = async (e) => {\r\n        setOpenFull(false);\r\n        \r\n        if (e.target.innerText === \"SAVE\") {\r\n            let note = { title: noteTitle,created:props.note.created,tagged: usersTagged, text: noteDescription }\r\n            console.log(note)\r\n              props.getNoteToEdit1(note)\r\n\r\n            setOpenFull(false)\r\n            setOpenUsers(false)\r\n            setTitle(\"\")\r\n            setUserTag([])\r\n            setDesc(\"\")\r\n        }\r\n    };\r\n\r\n \r\n\r\n    return (\r\n        <div>\r\n  \r\n                <Button disabled={props.disabled1} color=\"primary\" onClick={handleClickOpen}>\r\n                    Edit\r\n                </Button>\r\n           \r\n            <Dialog  open={openFull} onClose={handleClose} TransitionComponent={Transition}>\r\n                <AppBar style={{ minHeight: \"0\", marginTop: '-2%', right: '1%' ,marginBottom:'3%'}} className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Edit Note\r\n            </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n                            save\r\n            </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {props.note === undefined ? console.log(props):\r\n                <List style={{ marginTop: '-5%' }}>\r\n                    <ListItem button style={{marginTop:'2%'}}>\r\n                        <TitleAlert info={props.note === \"\" ? noteTitle : props.note.title} sendTitle={(val) => setTitle(val)}></TitleAlert>\r\n\r\n                    </ListItem>\r\n                    <Divider />\r\n\r\n                    <ListItem button>\r\n                        <ListItemText onClick={() => { setOpenUsers(!openUsers) }} primary=\"Users Tagged\" secondary={usersTagged.length === 0 ? \"Tag a user on a task!\" : usersTagged.map((user, index) =>\r\n                            index === 0 ? user.name : \", \" + user.name\r\n                            \r\n                        )} />\r\n                    </ListItem>\r\n                    {console.log(usersTagged)}\r\n                    {props.family.members === undefined ? \" \":\r\n\r\n                        <ListItem button>\r\n                            {\r\n                                props.family.members.map(user => <FormControlLabel\r\n                                    onClick={(e) => { e.target.checked === true ? setUserTag([...usersTagged,{username:e.target.name,name:e.target.id}]) : setUserTag(usersTagged.filter(item => e.target.id !== item.name)) }}\r\n                                    control={<Checkbox  name={user.username} id = {user.name} />}\r\n                                    label={user.name}\r\n                                  \r\n                                />)\r\n                            }\r\n                        </ListItem>\r\n\r\n\r\n                    }\r\n\r\n                    <ListItem button>\r\n                        <DescriptionAlert   setDescInParent={(description1) => setDesc(description1)} desc={props.note.text === \"\" ? noteDescription : props.note.text} style={{ height: '200px' }} />\r\n                    </ListItem>\r\n                 \r\n                </List>\r\n            }\r\n            </Dialog>\r\n            \r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\AddNoteDialog.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\AlertDialog.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DeleteSnackBar.jsx",["72","73","74","75"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default function SimpleSnackbar(props) {\r\n  const [open, setOpen] = React.useState();\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    if(event === null ? \"\" :event.target.innerText === \"UNDO\"){\r\n        props.setUndo(true)\r\n        return\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={props.open1}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Note Deleted\"\r\n        action={\r\n          <React.Fragment>\r\n              {console.log(props)}\r\n              {props.progress1 !== undefined ? props.progress1 : \"\" }\r\n            <Button style={{color:'red'}} id=\"UNDO\" color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              UNDO\r\n            </Button>\r\n           \r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DescriptionAlert.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\TitleAlert.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\DatesAlert.jsx",[],{"ruleId":"76","severity":1,"message":"77","line":139,"column":44,"nodeType":"78","endLine":139,"endColumn":114},{"ruleId":"79","severity":1,"message":"80","line":45,"column":9,"nodeType":"81","messageId":"82","endLine":70,"endColumn":10},{"ruleId":"83","severity":1,"message":"84","line":215,"column":212,"nodeType":"85","messageId":"86","endLine":215,"endColumn":213},{"ruleId":"83","severity":1,"message":"84","line":215,"column":252,"nodeType":"85","messageId":"86","endLine":215,"endColumn":253},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":40,"column":13,"nodeType":"93","messageId":"94","endLine":40,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":82,"column":77,"nodeType":"85","messageId":"97","endLine":82,"endColumn":79},{"ruleId":"91","severity":1,"message":"98","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"99","line":15,"column":8,"nodeType":"93","messageId":"94","endLine":15,"endColumn":19},{"ruleId":"91","severity":1,"message":"100","line":19,"column":8,"nodeType":"93","messageId":"94","endLine":19,"endColumn":15},{"ruleId":"91","severity":1,"message":"101","line":21,"column":8,"nodeType":"93","messageId":"94","endLine":21,"endColumn":18},{"ruleId":"91","severity":1,"message":"102","line":45,"column":12,"nodeType":"93","messageId":"94","endLine":45,"endColumn":18},{"ruleId":"91","severity":1,"message":"103","line":45,"column":20,"nodeType":"93","messageId":"94","endLine":45,"endColumn":25},{"ruleId":"91","severity":1,"message":"104","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":18},{"ruleId":"91","severity":1,"message":"105","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":17},{"ruleId":"91","severity":1,"message":"106","line":8,"column":10,"nodeType":"93","messageId":"94","endLine":8,"endColumn":14},{"ruleId":"91","severity":1,"message":"107","line":10,"column":9,"nodeType":"93","messageId":"94","endLine":10,"endColumn":20},"react/jsx-pascal-case","Imported JSX component Login_Page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'ITEM_HEIGHT' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'useEffect' is defined but never used.","'PostAddIcon' is defined but never used.","'Tooltip' is defined but never used.","'DatesAlert' is defined but never used.","'noteId' is assigned a value but never used.","'setId' is assigned a value but never used.","'IconButton' is defined but never used.","'CloseIcon' is defined but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]