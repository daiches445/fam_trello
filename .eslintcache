[{"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\index.js":"1","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\reportWebVitals.js":"2","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\App.js":"3","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCRegister.jsx":"4","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\Login_Page.jsx":"5","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\CCBoard.jsx":"6","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCAddNote.jsx":"7"},{"size":559,"mtime":1611303172763,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1610964015155,"results":"10","hashOfConfig":"9"},{"size":2511,"mtime":1612890350829,"results":"11","hashOfConfig":"9"},{"size":10046,"mtime":1612957064364,"results":"12","hashOfConfig":"9"},{"size":4004,"mtime":1612957722735,"results":"13","hashOfConfig":"9"},{"size":8925,"mtime":1612896373314,"results":"14","hashOfConfig":"9"},{"size":5644,"mtime":1612896109544,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1am1rpq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\index.js",[],["33","34"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\reportWebVitals.js",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\App.js",["35","36"],"import './App.css';\r\nimport Login_Page from './components/Login_Page';\r\nimport Register from './components/FCRegister'\r\nimport Board from './components/CCBoard';\r\nimport { Switch, Route, withRouter } from 'react-router-dom'\r\nimport { Component } from 'react';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      users: [\r\n        { username: 'guy1', password: '1234', fam_id: 'COHEN121' },\r\n        { username: 'guy2', password: '1234', fam_id: 'COHEN333' }\r\n      ],\r\n      family: [{\r\n        ID: 'COHEN121',\r\n        name: 'cohen',\r\n        notes: [{ title: 'hello', text: 'asdad' },\r\n        { title: 'hello2', text: 'asdad2' },\r\n        { title: 'hello3', text: 'asdad3' },\r\n        {\r\n          title: 'hello4', text: 'asdad4'\r\n        }\r\n        ]\r\n      }\r\n      ]\r\n    }\r\n  }\r\n  catchNoteToAdd = (note) => {\r\n    let families = this.state.family\r\n    let family = families[0]\r\n    family.notes.push(note)\r\n    families[0] = family\r\n    console.log(family);\r\n    this.setState({family:families})\r\n\r\n\r\n  }\r\n  catchUserToRegister = (user) => {\r\n    let usersArray = this.state.users\r\n    usersArray.push({ username: user.user_name, password: user.password, fam_id: user.family_ID })\r\n    this.setState({ users: usersArray })\r\n  }\r\n\r\n  AddFamily = (fam)=>{\r\n    let famArr = this.state.family;\r\n    famArr.push({ID:fam.ID,name:fam.name,notes:[{title:'Welcome to FamTrello',text:'take out the trash!'}]})\r\n    this.setState({family:famArr})\r\n  }\r\n catchNoteToDelete=(note)=>{\r\n  let families = this.state.family\r\n  let family = families[0]\r\n  family.notes = family.notes.filter(singleNote=>singleNote.title != note.title)\r\n  families[0] = family\r\n  console.log(family);\r\n  this.setState({family:families})\r\n  }\r\n  render(){\r\n  return (\r\n    <div style={{width:'100%',height:'100%'}}>\r\n      <header>\r\n         <h1>FamTrello</h1>\r\n      </header>\r\n        <div className=\"app_container\">\r\n      <Switch>\r\n        <Route exact path=\"/\"  render={()=><Login_Page data = {this.state}  ></Login_Page>}></Route>\r\n        <Route path = \"/FCRegister\" render={()=><Register AddFamily={this.AddFamily} sendUserToRegister={this.catchUserToRegister} app_data = {this.state}></Register>}></Route>\r\n        <Route path = '/CCBoard'  render={()=><Board deleteTask = {this.catchNoteToDelete} sendNote = {this.catchNoteToAdd} family = {this.state.family[0]}></Board>}></Route>\r\n      </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCRegister.jsx",["37","38","39"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\Login_Page.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\CCBoard.jsx",["40","41","42","43","44","45"],"import { Box, Grid, GridList, GridListTile, GridListTileBar, IconButton, Paper, Divider, Button } from '@material-ui/core';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport React, { Component } from 'react'\r\nimport FCAddNote from './FCAddNote';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nexport default class Board extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Families: [{ familyName: 'TATCHER', familyTickets: [{ title: 'throw garbage', description: 'throw the garbage kfar hassidim', memberTaged: [] }], familyMembers: [{ memberId: 111, name: 'nir' }, { memberId: 222, name: 'naama' }, { memberId: 333, name: 'amir' }] },\r\n            { familyName: 'DAICHES', familyTickets: [{ title: 'throw garbage', description: 'throw the garbage givat ada', memberTaged: [] }], familyMembers: [{ memberId: 444, name: 'ely' }, { memberId: 555, name: 'ella' }, { memberId: 666, name: 'tal' }] }\r\n            ],\r\n            currentFamily: 'DAICHES',\r\n            currentMember: 'tal1',\r\n            addNoteDisplay: '',\r\n            options: [\r\n                'Edit',\r\n                'Delete',\r\n                'Info',\r\n\r\n            ],\r\n            anchorEl: '',\r\n            open: false,\r\n            currentTasksIndex: 0,\r\n            board_z_index: 0\r\n\r\n        }\r\n\r\n\r\n        var ITEM_HEIGHT = 48;\r\n        this.taskRef = React.createRef();\r\n    }\r\n    getNoteToAdd = (note) => {\r\n        this.props.sendNote(note)\r\n    }\r\n    openOrCloseAddNote = () => {\r\n        this.state.addNoteDisplay === '' ? this.setState({ addNoteDisplay: <FCAddNote sendNote={this.getNoteToAdd} exitFunc={this.openOrCloseAddNote} />, board_z_index: -1 }) : this.setState({ addNoteDisplay: '', board_z_index: 0 })\r\n    }\r\n\r\n    setAnchorEl = (data) => {\r\n        this.setState({ anchorEl: data })\r\n\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        console.log(event);\r\n        this.setState({ open: !this.state.open, currentTasksIndex: event.target.id })\r\n        this.setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    handleClose = (e) => {\r\n        console.log(e.target.title)\r\n        console.log(this.taskRef.current);\r\n        this.setAnchorEl(null);\r\n        this.setState({ open: false })\r\n\r\n        switch (e.target.id) {\r\n            case 'Delete':\r\n                this.props.deleteTask(this.props.family.notes[this.state.currentTasksIndex])\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='container' >\r\n                {this.state.addNoteDisplay}\r\n                <Paper style={{ zIndex: this.state.board_z_index }}>\r\n\r\n                    <Grid container direction='column' spacing='' >\r\n                        <Grid container alignItems='center'>\r\n                            <Grid item xs='2'>\r\n                                <IconButton onClick={this.openOrCloseAddNote} >\r\n                                    <PostAddIcon color='primary' style={{ fontSize: '100' }}></PostAddIcon>\r\n                                </IconButton>\r\n                            </Grid>\r\n                            <Grid item xs='9' style={{ alignSelf: 'center', margin: '0px' }}> <h1 style={{ alignSelf: 'center', margin: '0px' }}>welcome,{this.state.currentMember}</h1></Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container direction='row' >\r\n                            <Grid item xs=\"2\"><h2>tasks</h2></Grid>\r\n                            <Grid container direction='row' xs='9'>\r\n                                <div className='tasks_bar' >\r\n                                    {\r\n                                        this.props.family.notes.map((note, index) => (\r\n                                            <li className='task'>\r\n                                                <Grid container >\r\n                                                    <Grid item xs={10}><h3 id={note.title} >{note.title}</h3>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={2}>\r\n                                                        <IconButton\r\n                                                            className='info_dots_btn'\r\n                                                            aria-label=\"more\"\r\n                                                            aria-controls=\"long-menu\"\r\n                                                            aria-haspopup=\"true\"\r\n\r\n                                                        >\r\n                                                            <MoreVertIcon id={index}\r\n                                                                onClick={this.handleClick} />\r\n                                                        </IconButton>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <p style={{ padding: '1px' }}>{note.text}</p>\r\n                                                <Button>aa</Button>\r\n                                            </li>\r\n                                        )\r\n\r\n                                        )}\r\n                                    <Menu\r\n                                        id=\"long-menu\"\r\n                                        anchorEl={this.state.anchorEl}\r\n                                        keepMounted\r\n                                        open={this.state.open}\r\n                                        onClose={this.handleClose}\r\n                                        PaperProps={{\r\n                                            style: {\r\n                                                maxHeight: this.ITEM_HEIGHT * 4.5,\r\n                                                width: '20ch',\r\n                                            },\r\n                                        }}\r\n                                    >\r\n                                        {this.state.options.map((option) => (\r\n                                            <MenuItem key={option} id={option} onClick={this.handleClose}>\r\n\r\n                                                {option}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Menu>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n\r\n                        <Grid container direction='row'> {/* third line ,tasks */}\r\n                            <Grid item xs=\"2\"><h2>my tasks</h2></Grid>\r\n                            <Grid container direction='row' xs='9'> {/* tasks container*/}\r\n                                {/*map function*/}\r\n                                <div className='tasks_bar' >\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container direction='row'>\r\n                            <Grid item xs=\"2\"><h2>finished tasks</h2></Grid>\r\n                            <Grid container direction='row' xs='9'> {/* tasks container*/}\r\n                                {/*map function*/}\r\n                                <div className='tasks_bar' >\r\n                                    <li className='task'>task</li>\r\n                                    <li className='task'>task</li>\r\n\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n{/* <p>Current member: {this.state.currentMember} - {this.state.currentFamily}</p>\r\n<p>Family Tickets: {this.state.currentFamily}</p>\r\n<div>{this.state.Families.find(family=>family.familyName === this.state.currentFamily).familyTickets === undefined ? 'NO FAMILY':\r\nthis.state.Families.find(family=>family.familyName === this.state.currentFamily).familyTickets.map((ticket,index)=><p>{index} - {ticket.title}</p>)}</div> */}","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCAddNote.jsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":54,"column":67,"nodeType":"52","messageId":"53","endLine":54,"endColumn":69},{"ruleId":"54","severity":1,"message":"55","line":67,"column":44,"nodeType":"56","endLine":67,"endColumn":78},{"ruleId":"57","severity":1,"message":"58","line":45,"column":9,"nodeType":"59","messageId":"60","endLine":70,"endColumn":10},{"ruleId":"61","severity":1,"message":"62","line":212,"column":211,"nodeType":"52","messageId":"63","endLine":212,"endColumn":212},{"ruleId":"61","severity":1,"message":"62","line":212,"column":251,"nodeType":"52","messageId":"63","endLine":212,"endColumn":252},{"ruleId":"64","severity":1,"message":"65","line":1,"column":10,"nodeType":"66","messageId":"67","endLine":1,"endColumn":13},{"ruleId":"64","severity":1,"message":"68","line":1,"column":21,"nodeType":"66","messageId":"67","endLine":1,"endColumn":29},{"ruleId":"64","severity":1,"message":"69","line":1,"column":31,"nodeType":"66","messageId":"67","endLine":1,"endColumn":43},{"ruleId":"64","severity":1,"message":"70","line":1,"column":45,"nodeType":"66","messageId":"67","endLine":1,"endColumn":60},{"ruleId":"64","severity":1,"message":"71","line":34,"column":13,"nodeType":"66","messageId":"67","endLine":34,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":179,"column":1,"nodeType":"74","messageId":"75","endLine":182,"endColumn":159},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Login_Page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'GridListTileBar' is defined but never used.","'ITEM_HEIGHT' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]