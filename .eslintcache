[{"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\index.js":"1","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\reportWebVitals.js":"2","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\App.js":"3","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\CCBoard.jsx":"4","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\Login_Page.jsx":"5","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCRegister.jsx":"6","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCAddNote.jsx":"7"},{"size":559,"mtime":1611303172763,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1610964015155,"results":"10","hashOfConfig":"9"},{"size":2431,"mtime":1612686718546,"results":"11","hashOfConfig":"9"},{"size":5859,"mtime":1612686718537,"results":"12","hashOfConfig":"9"},{"size":3586,"mtime":1612686624369,"results":"13","hashOfConfig":"9"},{"size":8084,"mtime":1612686624367,"results":"14","hashOfConfig":"9"},{"size":5481,"mtime":1612686718539,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1am1rpq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\index.js",[],["33","34"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\reportWebVitals.js",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\App.js",["35"],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\CCBoard.jsx",["36","37","38","39","40"],"import { Box, Grid, GridList, GridListTile, GridListTileBar, IconButton, Paper, Divider } from '@material-ui/core';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport React, { Component } from 'react'\r\nimport FCAddNote from './FCAddNote';\r\n\r\n\r\nexport default class Board extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Families: [{ familyName: 'TATCHER', familyTickets: [{ title: 'throw garbage', description: 'throw the garbage kfar hassidim', memberTaged: [] }], familyMembers: [{ memberId: 111, name: 'nir' }, { memberId: 222, name: 'naama' }, { memberId: 333, name: 'amir' }] },\r\n            { familyName: 'DAICHES', familyTickets: [{ title: 'throw garbage', description: 'throw the garbage givat ada', memberTaged: [] }], familyMembers: [{ memberId: 444, name: 'ely' }, { memberId: 555, name: 'ella' }, { memberId: 666, name: 'tal' }] }\r\n            ],\r\n            currentFamily: 'DAICHES',\r\n            currentMember: 'tal1',\r\n            addNoteDisplay:'none'\r\n\r\n\r\n        }\r\n    }\r\n openOrCloseAddNote=()=>{\r\n    this.state.addNoteDisplay === '' ? this.setState({addNoteDisplay:<FCAddNote exitFunc = {this.openOrCloseAddNote}/>}) : this.setState({addNoteDisplay:''}) \r\n }\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n\r\n                <Paper  className='board'>\r\n                    {this.state.addNoteDisplay}\r\n                    <Grid  container direction='column' spacing='' >\r\n                        <Grid container alignItems='center'> {/* top line ,add btn ,welcome user */}\r\n                            <Grid item xs='2'>\r\n                                <IconButton onClick={this.openOrCloseAddNote} >\r\n                                    <PostAddIcon color='primary' style={{ fontSize: '50' }}></PostAddIcon>\r\n                                </IconButton>\r\n                            </Grid>\r\n                            <Grid item xs='9' style={{ alignSelf: 'center' }}> <h1>welcome,{this.state.currentMember}</h1></Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container direction='row' > {/* second line ,tasks */}\r\n                            <Grid item xs=\"2\"><h2>tasks</h2></Grid>\r\n                            <Grid item xs='9'>\r\n\r\n                                <div className='tasks_bar' >\r\n                                    {console.log(this.props)}\r\n                                    {\r\n\r\n                                        this.props.family.notes.map((note, index) =>\r\n\r\n                                            <li className='task'><h3>{note.title}</h3>{note.text}</li>\r\n\r\n                                        )}\r\n                                    {/* <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li> */}\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n\r\n                        <Grid container direction='row'> {/* third line ,tasks */}\r\n                            <Grid item xs=\"2\"><h2>my tasks</h2></Grid>\r\n                            <Grid container direction='row' xs='9'> {/* tasks container*/}\r\n                                {/*map function*/}\r\n                                <div className='tasks_bar' >\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                    <li className='task'><h3>title</h3>task</li>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container direction='row'> {/* forth line ,tasks */}\r\n                            <Grid item xs=\"2\"><h2>etc. tasks</h2></Grid>\r\n                            <Grid container direction='row' xs='9'> {/* tasks container*/}\r\n                                {/*map function*/}\r\n                                <div className='tasks_bar' >\r\n                                    <li className='task'>task</li>\r\n                                    <li className='task'>task</li>\r\n\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n{/* <p>Current member: {this.state.currentMember} - {this.state.currentFamily}</p>\r\n<p>Family Tickets: {this.state.currentFamily}</p>\r\n<div>{this.state.Families.find(family=>family.familyName === this.state.currentFamily).familyTickets === undefined ? 'NO FAMILY':\r\nthis.state.Families.find(family=>family.familyName === this.state.currentFamily).familyTickets.map((ticket,index)=><p>{index} - {ticket.title}</p>)}</div> */}","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\Login_Page.jsx",[],"C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCRegister.jsx",["41"],"import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport '../App.css'\r\nimport { Divider, Grid, Paper } from '@material-ui/core';\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user_name: \"\",\r\n            password: \"\",\r\n            re_pass: \"\",\r\n            f_name: '',\r\n            l_name: '',\r\n            family_ID: \"\",\r\n            family_name: \"\",\r\n            fam_det_dsp: \"flex\",\r\n            fam_crt_dsp: 'none',\r\n            got_fam: false,\r\n            error_username: '',\r\n            error_pass: '',\r\n            error_repass: ''\r\n        }\r\n    }\r\n\r\n    GotFamiliy = (e) => {\r\n        if (this.state.got_fam)\r\n            this.setState({ got_fam: false, fam_crt_dsp: 'none', fam_det_dsp: \"flex\", })\r\n        else\r\n            this.setState({ got_fam: true, fam_crt_dsp: 'flex', fam_det_dsp: \"none\", })\r\n    }\r\n\r\n    SetVAl = (e) => {\r\n        let val = e.target.value;\r\n        let name = e.target.name;\r\n        console.log(e);\r\n        switch (name) {\r\n            case 'username':\r\n                this.setState({ user_name: val })\r\n                break;\r\n            case 'password':\r\n                if (val.length < 4) {\r\n                    this.setState({ error_pass: 'password to short' })\r\n                }\r\n                else\r\n                    this.setState({ password: val, error_pass: '' })\r\n                break;\r\n            case 're_pass':\r\n                this.setState({ re_pass: val })\r\n                break;\r\n            case 'family_ID':\r\n\r\n\r\n        }\r\n    }\r\n\r\n    Register = () => {\r\n        if (this.state.password.length < 4)\r\n            return\r\n\r\n        if (this.state.password !== this.state.re_pass) {\r\n            this.setState({ error_repass: 'passwords dont match' })\r\n            return\r\n        }\r\n        else\r\n            this.setState({ error_repass: '' })\r\n\r\n        let currentUser = this.props.users.find(user => user.username == this.state.user_name)\r\n        if (currentUser === undefined) {\r\n            this.props.sendUserToRegister(this.state)\r\n            this.props.history.push('/')\r\n        }\r\n        else\r\n            this.setState({ error_username: 'invalid user name' })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Paper>\r\n                    <Grid container direction='column' spacing='3' alignItems='flex-start' style={{ marginLeft: '10%' }}>\r\n                        <Grid item >\r\n                            <h1>Register</h1></Grid>\r\n                        <Grid item xs='6' alignItems='center'>\r\n                            <TextField helperText={this.state.error_username} error={this.state.error_username} name=\"username\" id=\"filled-basic\" label=\"User Name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n                        <Grid item spacing='1'>\r\n                            <Grid container spacing='1'>\r\n                                <Grid item xs='6'>\r\n                                    <TextField helperText={this.state.error_pass} error={this.state.error_pass} name=\"password\" id=\"outlined-basic\" label=\"password\" variant=\"outlined\" onChange={this.SetVAl} /></Grid>\r\n                                <Grid item xs='6'>\r\n                                    <TextField helperText={this.state.error_repass} error={this.state.error_repass} name=\"re_pass\" id=\"outlined-basic\" type='Password' label=\"ReEnter Password\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container spacing='1'>\r\n                                <Grid item xs='6'>\r\n                                    <TextField name=\"f_name\" id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                                <Grid item xs='6'>\r\n                                    <TextField name=\"l_name\" id=\"outlined-basic\" label=\"Family name\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Grid container  >\r\n                                <Grid item xs='9' style={{ padding: '10px' }}>\r\n                                    <label htmlFor=\"\">Create A family?</label>\r\n                                </Grid>\r\n                                <Grid item xs='3' >\r\n                                    <Switch\r\n\r\n                                        checked={this.state.got_fam}\r\n                                        onChange={this.GotFamiliy}\r\n                                        name=\"checkedA\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item className=\"fam\" style={{ display: this.state.fam_det_dsp, flexDirection: 'column' }}>\r\n                            <label htmlFor=\"\">Enter Your family ID</label>\r\n                            <TextField name=\"family_ID\" id=\"outlined-basic\" label=\"Family ID\" variant=\"outlined\" onChange={this.SetVAl} />\r\n                            <br />\r\n                        </Grid>\r\n                        <Grid item style={{ display: this.state.fam_crt_dsp}}>\r\n                            <Grid container>\r\n                                <label htmlFor=\"\">Create your family</label>\r\n                                <Grid item xs='6' className=\"fam\" style={{ display: this.state.fam_crt_dsp }}>\r\n                                    \r\n                                    <TextField name=\"family_ID\" id=\"outlined-basic\" label=\"Family ID\" variant=\"outlined\" />\r\n                                </Grid>\r\n                                <Grid item xs='6'>\r\n                                    <TextField name=\"family_name\" id=\"outlined-basic\" label=\"Family name\" variant=\"outlined\" />\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n                        <Grid item>\r\n                            <Button onClick={this.Register} color='primary' style={{ marginBottom: '3vh' }}>Register</Button>\r\n                        </Grid>\r\n                        <Divider></Divider>\r\n\r\n                    </Grid>\r\n                </Paper>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default withRouter(Register)\r\n","C:\\Users\\Tal\\Documents\\GitHub\\fam_trello\\src\\components\\FCAddNote.jsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":null,"fatal":true,"severity":2,"message":"46","line":46,"column":1},{"ruleId":"47","severity":1,"message":"48","line":1,"column":10,"nodeType":"49","messageId":"50","endLine":1,"endColumn":13},{"ruleId":"47","severity":1,"message":"51","line":1,"column":21,"nodeType":"49","messageId":"50","endLine":1,"endColumn":29},{"ruleId":"47","severity":1,"message":"52","line":1,"column":31,"nodeType":"49","messageId":"50","endLine":1,"endColumn":43},{"ruleId":"47","severity":1,"message":"53","line":1,"column":45,"nodeType":"49","messageId":"50","endLine":1,"endColumn":60},{"ruleId":"54","severity":1,"message":"55","line":101,"column":1,"nodeType":"56","messageId":"57","endLine":104,"endColumn":159},{"ruleId":null,"fatal":true,"severity":2,"message":"58","line":95,"column":43},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 44 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 45 | \u001b[39m  }\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 46 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 47 | \u001b[39m  render(){\u001b[0m\n\u001b[0m \u001b[90m 48 | \u001b[39m  \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 49 | \u001b[39m    \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m\"app_container\"\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'GridListTileBar' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 93 | \u001b[39m        let currentUser \u001b[33m=\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mprops\u001b[33m.\u001b[39mapp_data\u001b[33m.\u001b[39musers\u001b[33m.\u001b[39mfind(user \u001b[33m=>\u001b[39m user\u001b[33m.\u001b[39musername \u001b[33m===\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstate\u001b[33m.\u001b[39muser_name)\u001b[0m\n\u001b[0m \u001b[90m 94 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 95 | \u001b[39m        \u001b[36mif\u001b[39m(currentFamily \u001b[33m===\u001b[39m undefined \u001b[33m&&\u001b[39m )\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 96 | \u001b[39m        \u001b[36mif\u001b[39m (currentUser \u001b[33m===\u001b[39m undefined) {\u001b[0m\n\u001b[0m \u001b[90m 97 | \u001b[39m            \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mprops\u001b[33m.\u001b[39msendUserToRegister(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mstate)\u001b[0m\n\u001b[0m \u001b[90m 98 | \u001b[39m            \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mprops\u001b[33m.\u001b[39mhistory\u001b[33m.\u001b[39mpush(\u001b[32m'/'\u001b[39m)\u001b[0m","no-global-assign","no-unsafe-negation"]